/**
 * @file
 * SCSS file for Mixins.
 *
 * All mixins used in SCSS are defined in this file.
 */


@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}:    -moz-calc(#{$expression});
  #{$property}:         calc(#{$expression});
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
     -moz-box-shadow: $value;
      -ms-box-shadow: $value;
          box-shadow: $value;
}
@mixin appearance($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
      -ms-appearance: $value;
          appearance: $value;
}
@mixin transform($value) {
  -webkit-transform: $value;
     -moz-transform: $value;
      -ms-transform: $value;
          transform: $value;
}
@mixin transition($value) {
  -webkit-transition: $value;
     -moz-transition: $value;
      -ms-transition: $value;
          transition: $value;
}
@mixin flexbox() {
  display:  -webkit-box;
  display:     -moz-box;
  display:     -ms-flex;
  display: -webkit-flex;
  display:         flex;
}
@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flex;
  display: inline-flex;
}
@mixin flex-wrap($value) {
  -webkit-flex-wrap: $value;
     -moz-flex-wrap: $value;
      -ms-flex-wrap: $value;
          flex-wrap: $value;
}
@mixin align-items($value) {
  -webkit-align-items: $value;
     -moz-align-items: $value;
      -ms-align-items: $value;
          align-items: $value;
}
/**
 * Gradient 
 * 
 * background-vertical = Top to Bottom
 * background-horizontal = Left to Right
 * background-diagonal-tl-br = Top-Left to Bottom-Right
 * background-diagonal-bl-tr = Bottom-Left to Top-Right
 */
@mixin background-vertical($top, $bottom) {
  background: $top;
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%);
  background:    -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background:         linear-gradient(to bottom, $top 0%, $bottom 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$top', endColorstr='$bottom',GradientType=0);
}
@mixin background-horizontal($left, $right) {
  background: $left;
  background: -webkit-linear-gradient(left, $left 0%, $right 100%);
  background:    -moz-linear-gradient(left, $left 0%, $right 100%);
  background:         linear-gradient(to right, $left 0%, $right 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$left', endColorstr='$right',GradientType=1);
}
@mixin background-diagonal-tl-br($diag-tl, $diag-br) {
  background: $diag-tl;
  background: -webkit-linear-gradient(-45deg, $diag-tl 0%, $diag-br 100%);
  background:    -moz-linear-gradient(-45deg, $diag-tl 0%, $diag-br 100%);
  background:         linear-gradient(135deg, $diag-tl 0%, $diag-br 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$diag-tl', endColorstr='$diag-br',GradientType=1);
}
@mixin background-diagonal-bl-tr($diag-bl, $diag-tr) {
  background: $diag-bl;
  background: -webkit-linear-gradient(45deg, $diag-bl 0%, $diag-tr 100%);
  background:    -moz-linear-gradient(45deg, $diag-bl 0%, $diag-tr 100%);
  background:         linear-gradient(45deg, $diag-bl 0%, $diag-tr 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$diag-bl', endColorstr='$diag-tr',GradientType=1);
}
@mixin background-radial($center, $cover) {
  background: $center;
  background: -webkit-radial-gradient(center, ellipse cover, $center 0%, $cover 100%);
  background:    -moz-radial-gradient(center, ellipse cover, $center 0%, $cover 100%);
  background:         radial-gradient(ellipse at center, $center 0%, $cover 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$center', endColorstr='$cover',GradientType=1);
}
